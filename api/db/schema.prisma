// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id       String @id @default(cuid())
  externalAuthProvider String @map(name: "external_auth_provider") @default("auth0")
  externalAuthId String @map(name: "external_auth_id")
  tabs     Tab[]
  tags     Tag[]
}

model Tab {
  id String @id @default(cuid())
  url String
  notes String?
  userId String @map(name: "user_id")
  user User @relation(fields: [userId], references: [id])
  tags TabTag[]
}

model Tag {
  id String @id @default(cuid())
  name String
  userId String @map(name: "user_id")
  user User @relation(fields: [userId], references: [id])
  tabs TabTag[]

  @@unique([name, userId])
}

model TabTag {
  id String @id @default(cuid())
  tabId String @map(name: "tab_id")
  tagId String @map(name: "tag_id")

  tab Tab @relation(fields: [tabId], references: [id])
  tag Tag @relation(fields: [tagId], references: [id])

  @@unique([tabId, tagId])
}

